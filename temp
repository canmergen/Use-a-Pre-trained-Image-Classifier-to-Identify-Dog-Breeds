def _extract_company(text: str, lines: List[str]) -> Tuple[Optional[str], Optional[str], Dict]:
    dbg = {}
    T_norm = _norm_spaces(text)
    T_raw  = _nfkc(text)
    L = [_norm_spaces(ln) for ln in lines if isinstance(ln,str) and ln.strip()]

    # === 1) Aynı satırda veya farklı satırlarda şirket adı + türü ===
    GEN = r"(?:\s*[’'`´\"“”]?\s*(?:NIN|NİN|NUN|NÜN|IN|İN|UN|ÜN))?"
    inline_match = re.search(
        rf"([A-ZÇĞİÖŞÜ0-9\s\.\-\/&’']{{3,}}?"
        rf"(?:HİZMETLERİ|SANAYİ|TİCARET|İNŞAAT|OTOMOTİV|YATIRIM|GIDA|ENERJİ|SAĞLIK|TEKNOLOJİ|MEDİKAL)?"
        rf")\s*(?:\n|\r|\s|:|,|\.|;)*("  # newline ve işaretleri dahil et
        rf"ANON[İI]M\s+{_spaced_token('ŞİRKET')}"
        rf"|A\.?\s*Ş|AŞ"
        rf"|LTD\s*\.?\s*ŞT[İI]|LTD\s*\.?\s*ST[İI]"
        rf"|L[İI]M[İI]TED\s+{_spaced_token('ŞİRKET')}"
        rf")"
        rf"{GEN}",
        T_norm,
        flags=re.IGNORECASE | re.DOTALL
    )

    if inline_match:
        cname = re.sub(r"\s+", " ", inline_match.group(1)).strip(" ,.-:;’'")
        raw_type = inline_match.group(2)
        raw_type = re.sub(GEN + r"$", "", raw_type, flags=re.IGNORECASE)
        ctype = _map_type_to_canonical(raw_type)

        # Şirket adından tür kelimelerini temizle
        cname = re.sub(r"\b(ANONIM|ANONİM|LIMITED|LİMİTED|Ş\s*İ\s*R\s*K\s*E\s*T[İI]|A\.?\s*Ş|AŞ)\b",
                       "", cname, flags=re.IGNORECASE)

        # Gürültü başlık kelimelerini çıkar
        noise_words = ["GENEL", "KURUL", "TOPLANTISI", "HAZIR", "BULUNANLAR", "LİSTESİ", "ÖRNEĞİ"]
        cname_tokens = [t for t in cname.split() if t.upper() not in noise_words]
        cname = " ".join(cname_tokens).strip(" ,.-:;’'")

        return _upper_tr(cname), ctype, {"reason": "inline_match", "best_name": cname, "type": ctype}

    # === 2) Geriye dönük tarama (fallback) ===
    m = re.search(r"([A-ZÇĞİÖŞÜ0-9\s]+?)\s+ANON[İI]M\s+Ş[İI]RKET[İI]", T_norm, flags=re.IGNORECASE | re.DOTALL)
    if m:
        cname = re.sub(r"\s+", " ", m.group(1)).strip(" ,.-:;’'")
        noise_words = ["GENEL","KURUL","TOPLANTISI","HAZIR","BULUNANLAR","LİSTESİ","ÖRNEĞİ"]
        cname_tokens = [t for t in cname.split() if t.upper() not in noise_words]
        cname = " ".join(cname_tokens).strip(" ,.-:;’'")
        return _upper_tr(cname), "ANONİM ŞİRKETİ", {"reason":"fallback_match","best_name":cname}

    dbg["reason"] = "no_candidates"
    return None, None, dbg